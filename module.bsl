
//Сгенерировано c1ExchangeGen
Функция СериализоватьСсылку(СсылкаЗнч) Экспорт

    Возврат "~~~@REF:" + Строка(ТипЗнч(СсылкаЗнч)) + "/" + Строка(СсылкаЗнч.УникальныйИдентификатор());
    
КонецФункции

Функция _ПрЗнч(Значен) Экспорт

    Если Справочники.ТипВсеСсылки().Содержит(ТипЗнч(Значен)) 
     Или Документы.ТипВсеСсылки().Содержит(ТипЗнч(Значен)) Тогда
       Возврат СериализоватьСсылку(Значен);
    Иначе
       Возврат Строка(Значен);
    КонецЕсли;
    
КонецФункции

Процедура СериализоватьМассивСтруктур(ЗаписьJSON, Мас) Экспорт

    ЗаписьJSON.ЗаписатьНачалоМассива();
    Для Каждого Эл Из Мас Цикл
       ЗаписьJSON.ЗаписатьНачалоОбъекта();
       Для Каждого ЭлСтр Из Эл Цикл
           ЗаписьJSON.ЗаписатьИмяСвойства(ЭлСтр.Ключ);
           ЗаписьJSON.ЗаписатьЗначение(_ПрЗнч(ЭлСтр.Значение));
       КонецЦикла;
       ЗаписьJSON.ЗаписатьКонецОбъекта();
    КонецЦикла;
    ЗаписьJSON.ЗаписатьКонецМассива();
    
КонецПроцедуры

Функция СоздатьСтруктуру_СправочникНоменклатура(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("ВидНоменклатуры", Неопределено);
    Стркт.Вставить("Артикул", Неопределено);
    Стркт.Вставить("Услуга", Неопределено);
    Стркт.Вставить("Производитель", Неопределено);
    Стркт.Вставить("НоменклатурнаяГруппа", Неопределено);
    Стркт.Вставить("НаименованиеПолное", Неопределено);
    Стркт.Вставить("Импортер", Неопределено);
    Стркт.Вставить("НомерГТД", Неопределено);
    Стркт.Вставить("СтатьяЗатрат", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("СтавкаНДС", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("Комментарий", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникНоменклатура(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.Номенклатура.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникНоменклатура(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникВидыНоменклатуры(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникВидыНоменклатуры(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.ВидыНоменклатуры.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникВидыНоменклатуры(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникНоменклатурныеГруппы(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникНоменклатурныеГруппы(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.НоменклатурныеГруппы.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникНоменклатурныеГруппы(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникКонтрагенты(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("ГоловнойКонтрагент", Неопределено);
    Стркт.Вставить("НаименованиеПолное", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("КПП", Неопределено);
    Стркт.Вставить("ОсновнойБанковскийСчет", Неопределено);
    Стркт.Вставить("ОбособленноеПодразделение", Неопределено);
    Стркт.Вставить("КодПоОКПО", Неопределено);
    Стркт.Вставить("ИНН", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("Комментарий", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникКонтрагенты(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.Контрагенты.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникКонтрагенты(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникКонтактныеЛица(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("Описание", Неопределено);
    Стркт.Вставить("Имя", Неопределено);
    Стркт.Вставить("Фамилия", Неопределено);
    Стркт.Вставить("ДатаРождения", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Отчество", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникКонтактныеЛица(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.КонтактныеЛица.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникКонтактныеЛица(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникБанковскиеСчета(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("ДатаЗакрытия", Неопределено);
    Стркт.Вставить("СуммаБезКопеек", Неопределено);
    Стркт.Вставить("ДатаОткрытия", Неопределено);
    Стркт.Вставить("ВидСчета", Неопределено);
    Стркт.Вставить("НомерИДатаРазрешения", Неопределено);
    Стркт.Вставить("БанкДляРасчетов", Неопределено);
    Стркт.Вставить("МесяцПрописью", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("Банк", Неопределено);
    Стркт.Вставить("НомерСчета", Неопределено);
    Стркт.Вставить("ВалютаДенежныхСредств", Неопределено);
    Стркт.Вставить("ТекстКорреспондента", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("ТекстНазначения", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникБанковскиеСчета(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.БанковскиеСчета.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникБанковскиеСчета(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникБанки(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("Адрес", Неопределено);
    Стркт.Вставить("КоррСчет", Неопределено);
    Стркт.Вставить("Телефоны", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("Город", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(ТипЗнч(Объект));
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникБанки(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.Банки.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       Стркт = СоздатьСтруктуру_СправочникБанки(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция Выгрузить() Экспорт

    Зп = Новый ЗаписьJSON;
    Зп.УстановитьСтроку();
    _ММ = Новый Массив;
    
	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникНоменклатура() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникВидыНоменклатуры() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникНоменклатурныеГруппы() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникКонтрагенты() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникКонтактныеЛица() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникБанковскиеСчета() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникБанки() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

    СериализоватьМассивСтруктур(Зп, _ММ);
    Возвтрат Зп.Закрыть();
    
КонецФункции

