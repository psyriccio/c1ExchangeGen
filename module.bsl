
//Сгенерировано c1ExchangeGen
Функция СериализоватьСсылку(СсылкаЗнч) Экспорт

    Возврат "~~~@REF:" + Строка(СсылкаЗнч.Метаданные().ПолноеИмя()) + "/" + Строка(СсылкаЗнч.УникальныйИдентификатор());
    
КонецФункции

Функция СтрСплит(Стр, Разд) Экспорт

    Рез = Новый Массив;
    Ост = Стр;
    Пока Ост <> "" Цикл
    	ПР = Найти(Ост, Разд);
    	Если ПР = 0 Тогда
    		Рез.Добавить(Ост);
    		Ост = "";
    	Иначе
    		Нк = Лев(Ост, ПР-1);
    		Рез.Добавить(Нк);
    		Ост = Прав(Ост, СтрДлина(Ост) - (ПР + СтрДлина(Разд) - 1));
    	КонецЕсли;
    КонецЦикла;
    
    Возврат Рез;
    
КонецФункции

Функция ДесереализоватьСсылку(Стрк) Экспорт

    Чст = СтрСплит(Стрк, "@REF:");
    Если Чст.Количество() = 2 Тогда
       Если Чст[0] = "~~~" Тогда
           Пр = СтрСплит(Чст[1], "/");
           Имена = СтрСплит(Пр[0], ".");
           Если Имена[0] = "Справочник" Тогда
               Возврат Справочники[Имена[1]].ПолучитьСсылку(Новый УникальныйИдентификатор(Пр[1]));
           КонецЕсли;
           Если Имена[0] = "Документ" Тогда
               Возврат Документы[Имена[1]].ПолучитьСсылку(Новый УникальныйИдентификатор(Пр[1]));
           КонецЕсли;
       КонецЕсли;
    КонецЕсли;
    
    Возврат Неопределено;
    
КонецФункции

Функция _ПрЗнч(Значен) Экспорт

    Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Значен)) 
     Или Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Значен)) Тогда
       Возврат СериализоватьСсылку(Значен);
    Иначе
       Возврат Формат(Значен, "ЧРД=.; ЧРГ=' '; ЧГ=0; ДФ=yyyyMMddHHmmss; БЛ=Ложь; БИ=Истина");
    КонецЕсли;
    
КонецФункции

Процедура СериализоватьМассивСтруктур(ЗаписьJSON, Мас) Экспорт

    ЗаписьJSON.ЗаписатьНачалоМассива();
    Для Каждого Эл Из Мас Цикл
       ЗаписьJSON.ЗаписатьНачалоОбъекта();
       #Если Клиент Тогда
           Сообщить("json_export " + Строка(Эл._Ссылка));
       #КонецЕсли
       Для Каждого ЭлСтр Из Эл Цикл
           ЗаписьJSON.ЗаписатьИмяСвойства(ЭлСтр.Ключ);
           ЗаписьJSON.ЗаписатьЗначение(_ПрЗнч(ЭлСтр.Значение));
       КонецЦикла;
       ЗаписьJSON.ЗаписатьКонецОбъекта();
    КонецЦикла;
    ЗаписьJSON.ЗаписатьКонецМассива();
    
КонецПроцедуры

Функция ДесереализоватьМассивСтруктур(ЧтениеJSON) Экспорт

    _ММ = Новый Массив;
    Структ = Неопределено;
    ИмяСв = "";
    Пока ЧтениеJSON.Прочитать() Цикл
       Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоОбъекта Тогда
           Структ = Новый Структура;
       КонецЕсли;
       Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.КонецОбъекта Тогда
           #Если Клиент Тогда
               Сообщить("json_import " + Структ._Ссылка);
           #КонецЕсли
           Структ._Ссылка = ДесереализоватьСсылку(Структ._Ссылка);
           _ММ.Добавить(Структ);
       КонецЕсли;
       Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства Тогда
           ИмяСв = ЧтениеJSON.ТекущееЗначение;
       КонецЕсли;
       Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.Строка 
			Или ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.Число 
			Или ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.Булево Тогда

           Структ.Вставить(ИмяСв, ЧтениеJSON.ТекущееЗначение);
       КонецЕсли;
    КонецЦикла;
    
    Возврат _ММ;
    
КонецФункции

Функция СоздатьОбъектыИзМассиваСтруктур(Мас) Экспорт

    _Об = Новый Массив;
    Для Каждого Струк Из Мас Цикл
       #Если Клиент Тогда
           Сообщить("construct " + Строка(Струк._Ссылка));
       #КонецЕсли
       Объект = Струк._Ссылка.ПолучитьОбъект();
       Если Объект = Неопределено Тогда
           Имена = СтрСплит(Струк._Тип, ".");
           Если Имена[0] = "Справочник" Тогда
               ЭтоГруппа = Ложь;
               Струк.Свойство("ЭтоГруппа", ЭтоГруппа);
               Если ЭтоГруппа = Неопределено Тогда
                   ЭтоГруппа = Ложь;
               КонецЕсли;
               Если ЭтоГруппа Тогда
                   Объект = Справочники[Имена[1]].СоздатьГруппу();
               Иначе
                   Объект = Справочники[Имена[1]].СоздатьЭлемент();
               КонецЕсли;
           КонецЕсли;
           Если Имена[0] = "Документ" Тогда
               Объект = Документы[Имена[1]].СоздатьДокумент();
           КонецЕсли;
           Объект.УстановитьСсылкуНового(Струк._Ссылка);
       КонецЕсли;
       Для Каждого СтрСтр Из Струк Цикл
           ТипЗн = Неопределено;
           Зн = Неопределено;
           Попытка 
			Выполнить("ТипЗн = ТипЗнч(Объект."+ СтрСтр.Ключ +")"); 
		Исключение 
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
		КонецПопытки;

           Если ТипЗн <> Неопределено Тогда
               Если ТипЗн = Тип("Строка") Тогда
                   Зн = Строка(СтрСтр.Значение);
               КонецЕсли;
               Если ТипЗн = Тип("Число") Тогда
                   Зн = Число(СтрСтр.Значение);
               КонецЕсли;
               Если ТипЗн = Тип("Булево") Тогда
                   Зн = (Строка(СтрСтр.Значение) = "Истина");
               КонецЕсли;
               Если ТипЗн = Тип("Дата") Тогда
                   Зн = Дата(Строка(СтрСтр.Значение));
               КонецЕсли;
           КонецЕсли;
           Выполнить("Объект." + СтрСтр.Ключ + " = Зн;");
       КонецЦикла;
       Попытка
           Объект.Записать();
       Исключение
           #Если Клиент Тогда
               Сообщить(ОписаниеОшибки());
           #КонецЕсли
       КонецПопытки;
       _Об.Добавить(Объект);
    КонецЦикла
    
    Возврат _Об;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникНоменклатура(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("ВидНоменклатуры", Неопределено);
    Стркт.Вставить("Артикул", Неопределено);
    Стркт.Вставить("Услуга", Неопределено);
    Стркт.Вставить("Производитель", Неопределено);
    Стркт.Вставить("НоменклатурнаяГруппа", Неопределено);
    Стркт.Вставить("НаименованиеПолное", Неопределено);
    Стркт.Вставить("Импортер", Неопределено);
    Стркт.Вставить("НомерГТД", Неопределено);
    Стркт.Вставить("СтатьяЗатрат", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("СтавкаНДС", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("Комментарий", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникНоменклатура(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.Номенклатура.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникНоменклатура(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникВидыНоменклатуры(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникВидыНоменклатуры(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.ВидыНоменклатуры.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникВидыНоменклатуры(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникНоменклатурныеГруппы(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникНоменклатурныеГруппы(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.НоменклатурныеГруппы.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникНоменклатурныеГруппы(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникКонтрагенты(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("ГоловнойКонтрагент", Неопределено);
    Стркт.Вставить("НаименованиеПолное", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("КПП", Неопределено);
    Стркт.Вставить("ОсновнойБанковскийСчет", Неопределено);
    Стркт.Вставить("ОбособленноеПодразделение", Неопределено);
    Стркт.Вставить("КодПоОКПО", Неопределено);
    Стркт.Вставить("ИНН", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("Комментарий", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникКонтрагенты(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.Контрагенты.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникКонтрагенты(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникКонтактныеЛица(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("Описание", Неопределено);
    Стркт.Вставить("Имя", Неопределено);
    Стркт.Вставить("Фамилия", Неопределено);
    Стркт.Вставить("ДатаРождения", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Отчество", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникКонтактныеЛица(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.КонтактныеЛица.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникКонтактныеЛица(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникБанковскиеСчета(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("ДатаЗакрытия", Неопределено);
    Стркт.Вставить("СуммаБезКопеек", Неопределено);
    Стркт.Вставить("ДатаОткрытия", Неопределено);
    Стркт.Вставить("ВидСчета", Неопределено);
    Стркт.Вставить("НомерИДатаРазрешения", Неопределено);
    Стркт.Вставить("БанкДляРасчетов", Неопределено);
    Стркт.Вставить("МесяцПрописью", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("Банк", Неопределено);
    Стркт.Вставить("НомерСчета", Неопределено);
    Стркт.Вставить("ВалютаДенежныхСредств", Неопределено);
    Стркт.Вставить("ТекстКорреспондента", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("ТекстНазначения", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникБанковскиеСчета(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.БанковскиеСчета.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникБанковскиеСчета(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция СоздатьСтруктуру_СправочникБанки(Объект = Неопределено) Экспорт

    Стркт = Новый Структура;
    Стркт.Вставить("Наименование", Неопределено);
    Стркт.Вставить("_Тип", Неопределено);
    Стркт.Вставить("Адрес", Неопределено);
    Стркт.Вставить("КоррСчет", Неопределено);
    Стркт.Вставить("Телефоны", Неопределено);
    Стркт.Вставить("_ИД", Неопределено);
    Стркт.Вставить("Город", Неопределено);
    Стркт.Вставить("_Ссылка", Неопределено);
    Стркт.Вставить("Код", Неопределено);

    Если Объект <> Неопределено Тогда
       #Если Клиент Тогда
           Сообщить("struct " + Строка(Объект));
       #КонецЕсли
       ЗаполнитьЗначенияСвойств(Стркт, Объект);
       Стркт._ИД = Строка(Объект.УникальныйИдентификатор());
       Стркт._Тип = Строка(Объект.Метаданные().ПолноеИмя());
       Стркт._Ссылка = СериализоватьСсылку(Объект);
    КонецЕсли;
    
    Возврат Стркт;
    
КонецФункции

Функция ВыгрузитьВСтруктуры_СправочникБанки(Отбор = Неопределено) Экспорт

    _Рез = Новый Массив;
    Выборка = Справочники.Банки.Выбрать(,,);
    Пока Выборка.Следующий() Цикл
       #Если Клиент Тогда
           Сообщить("struct_unload " + Строка(Выборка.Ссылка));
       #КонецЕсли
       Стркт = СоздатьСтруктуру_СправочникБанки(Выборка.Ссылка);
       _Рез.Добавить(Стркт);
    КонецЦикла;
    
    Возврат _Рез;
    
КонецФункции

Функция Выгрузить() Экспорт

    Зп = Новый ЗаписьJSON;
    Зп.УстановитьСтроку();
    _ММ = Новый Массив;
    
	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникНоменклатура() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникВидыНоменклатуры() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникНоменклатурныеГруппы() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникКонтрагенты() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникКонтактныеЛица() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникБанковскиеСчета() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

	Для Каждого Эл Из ВыгрузитьВСтруктуры_СправочникБанки() Цикл
		_ММ.Добавить(Эл);
	КонецЦикла;

    СериализоватьМассивСтруктур(Зп, _ММ);
    Возврат Зп.Закрыть();
    
КонецФункции

Функция Загрузить(Текст) Экспорт

    Чт = Новый ЧтениеJSON;
    Чт.УстановитьСтроку(Текст);
    _ММ = ДесереализоватьМассивСтруктур(Чт);
    _Об = СоздатьОбъектыИзМассиваСтруктур(_ММ);
    #Если Клиент Тогда
       Сообщить("Загружено объектов: " + Строка(_Об.Количество()));
    #КонецЕсли
    
КонецФункции

